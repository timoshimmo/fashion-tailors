// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Estimates body measurements from an image using AI.
 *
 * - estimateBodyMeasurements - A function that handles the body measurement estimation process.
 * - EstimateBodyMeasurementsInput - The input type for the estimateBodyMeasurements function.
 * - EstimateBodyMeasurementsOutput - The return type for the estimateBodyMeasurements function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const EstimateBodyMeasurementsInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      'A photo of the user, as a data URI that must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.'    ),
});
export type EstimateBodyMeasurementsInput = z.infer<
  typeof EstimateBodyMeasurementsInputSchema
>;

const EstimateBodyMeasurementsOutputSchema = z.object({
  neck: z.number().describe('The circumference of the neck in centimeters.'),
  chest: z.number().describe('The circumference of the chest in centimeters.'),
  waist: z.number().describe('The circumference of the waist in centimeters.'),
  hips: z.number().describe('The circumference of the hips in centimeters.'),
  shoulderWidth: z
    .number()
    .describe('The width of the shoulders in centimeters.'),
  sleeveLength: z.number().describe('The length of the sleeve in centimeters.'),
  inseam: z.number().describe('The inseam length in centimeters.'),
});
export type EstimateBodyMeasurementsOutput = z.infer<
  typeof EstimateBodyMeasurementsOutputSchema
>;

export async function estimateBodyMeasurements(
  input: EstimateBodyMeasurementsInput
): Promise<EstimateBodyMeasurementsOutput> {
  return estimateBodyMeasurementsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'estimateBodyMeasurementsPrompt',
  input: {schema: EstimateBodyMeasurementsInputSchema},
  output: {schema: EstimateBodyMeasurementsOutputSchema},
  prompt: `You are an AI assistant that can estimate body measurements from a photo.
  You will receive a photo of a person and you will estimate their neck, chest, waist, hips, shoulder width, sleeve length, and inseam measurements in centimeters.
  Return the measurements as a JSON object.

  Photo: {{media url=photoDataUri}}`,
});

const estimateBodyMeasurementsFlow = ai.defineFlow(
  {
    name: 'estimateBodyMeasurementsFlow',
    inputSchema: EstimateBodyMeasurementsInputSchema,
    outputSchema: EstimateBodyMeasurementsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
